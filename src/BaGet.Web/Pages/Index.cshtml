@page
@using BaGet.Protocol.Models
@model IndexModel

@{
    ViewData["Title"] = "Packages";
    ViewData["SearchQuery"] = Model.Query;
}

@section SearchForm
{
    @* The search query is in a form in the header. The search filters are bindings on this Razor page.
    @* Pass the Razor bindings back up to the header's search form. *@
    @if (Model.Prerelease != true)
    {
        <input type="hidden" name="prerelease" value="False" />
    }
}

<div class="search-options form-inline">
    <div class="form-group checkbox">
        <label>
            <input type="checkbox"
                   id="prerelease"
                   @(Model.Prerelease ? "checked='checked'" : "")
                   onclick="window.location.href='@SearchLink(prerelease: !Model.Prerelease, page: 1)'">

            <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
            Include prerelease.
        </label>
    </div>
</div>

@if (Model.Packages.Count == 0)
{
    <div>
        <h2>Oops, nothing here...</h2>
        <p>
            It looks like there's no package here to see. Take a look below for useful links.
        </p>
        <p><a asp-page="/Upload">Upload a package</a></p>
        <p><a href="https://loic-sharma.github.io/BaGet/" target="_blank" rel="noopener noreferrer">BaGet documentation</a></p>
        <p><a href="https://github.com/loic-sharma/BaGet/issues" target="_blank" rel="noopener noreferrer">BaGet issues</a></p>
    </div>
}
else
{
    @foreach (var package in Model.Packages)
    {
        <div class="row search-result">
            <div class="col-sm-1 hidden-xs hidden-sm">
                <img src="@package.IconUrl"
                     class="package-icon img-responsive"
                     onerror="this.src='@Url.Content("~/_content/BaGet.Web/images/default-package-icon-256x256.png")'"
                     alt="The package icon" />
            </div>
            <div class="col-sm-11">
                <div>
                    <a asp-page="Package"
                       asp-route-id="@package.PackageId"
                       asp-route-version="@package.Version"
                       class="package-title">
                        @package.PackageId
                    </a>
                    <span>by: @string.Join(" ", package.Authors)</span>
                </div>
                <ul class="info">
                    <li>
                        <span>
                            <i class="ms-Icon ms-Icon--Download"></i>
                            @package.TotalDownloads.ToMetric() total downloads
                        </span>
                    </li>
                    <li>
                        <span>
                            <i class="ms-Icon ms-Icon--Flag"></i>
                            Latest version: @package.Version
                        </span>
                    </li>
                    @if (package.Tags.Any())
                    {
                        <li>
                            <span class="tags">
                                <i class="ms-Icon ms-Icon--Tag"></i>
                                @string.Join(" ", package.Tags)
                            </span>
                        </li>
                    }
                </ul>
                <div>
                    @package.Description
                </div>
            </div>
        </div>
    }

    var showPreviousLink = Model.PageIndex > 1;
    var showNextLink = Model.Packages.Count >= IndexModel.ResultsPerPage;

    if (showPreviousLink || showNextLink)
    {
        <nav aria-label="Search page navigation">
            <ul class="pager">
                @if (showPreviousLink)
                {
                    <li><a href="@SearchLink(page:Model.PageIndex - 1)">Previous</a></li>
                }

                @if (showNextLink)
                {
                    <li><a href="@SearchLink(page: Model.PageIndex + 1)">Next</a></li>
                }
            </ul>
        </nav>
    }
}

@functions {

    private string SearchLink(
        bool? prerelease = null,
        int? page = null)
    {
        // Use model's value if the argument was skipped.
        prerelease ??= Model.Prerelease;
        page ??= Model.PageIndex;

        // Remove query parameters that have default value
        if (prerelease == true) prerelease = null;
        if (page == 1) page = null;

        return Url.Page("Index", new
        {
            q = Model.Query,
            p = page,
            prerelease,
        });
    }
}
